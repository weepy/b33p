{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Chat.svelte",
    "../../PingTime.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n// import Soundfont from 'soundfont-player'\nimport io from 'socket.io-client'\n\nimport Chat from './Chat.svelte'\nimport PingTime from './PingTime.svelte'\nimport {onMount} from 'svelte'\n\nlet started = false \n\nlet ac\nlet sf\n// let instr\n// let player\nlet nick = localStorage.nick\n\n\n\n\nonMount(() => {\n\t//attach a listener to the keyboard events\n\tdocument.querySelector('tone-keyboard').addEventListener('noteon', e => {\n\t\t\n\t\t\n\t\tuserPlayKey({key: e.detail.name, velocity: 0.7})\n\t})\n\n\tdocument.querySelector('tone-keyboard').addEventListener('noteoff', e => {\n\t\tuserStopKey({key: e.detail.name})\n\t})\n\n\t// document.querySelector('tone-keyboard').style.display='none'\n\n})\n\n\nlet socket = io()\n\nlet thisUser = {\n\tnick: null,\n\tchannel_id: null\n}\n\n\nlet pingTime = 0\n\n/////// PING\n// $: console.log(pingTime)\n\n\n\nsocket.on('keyon', ({key, channel_id, velocity}) => {\n\t// console.log(\"took\", Date.now() - window.keyonat)\n\tif(localStorage.localSend && channel_id == thisUser.channel_id) {\n\t\treturn\n\t}\n\tplayKey({key, channel_id, velocity})\n\t\n})\n\n\n\n\nsocket.on('keyoff', ({key, channel_id}) => {\n\tif(localStorage.localSend && channel_id == thisUser.channel_id) {\n\t\treturn\n\t}\n\n\tstopKey({key, channel_id})\n})\n\n\nfunction playKey({key, channel_id, velocity}) {\n\tconst instrument = channels[channel_id]\n\tinstrument.triggerAttack(key, \"+0\", velocity)\n}\n\nfunction stopKey({key, channel_id}) {\n\tconst instrument = channels[channel_id]\n    instrument.triggerRelease(key)\n}\n\nfunction userStopKey({key}) {\n\tconst delay = parseInt(localStorage.delay)||0\n\n\tsocket.emit('keyoff', {key,channel_id: thisUser.channel_id}, delay)\n\t\n\tif(localStorage.localSend) {\n\t\tsetTimeout(() => {\n\t\t\tstopKey({key, channel_id: thisUser.channel_id})\n\t\t}, delay+pingTime)\n\t}\n\t\n\n}\n\nfunction userPlayKey({key, velocity}) {\n\tconst delay = parseInt(localStorage.delay)||0\n\twindow.keyonat = Date.now()\n\tsocket.emit('keyon', {key,channel_id: thisUser.channel_id, velocity}, delay)\n\n\tif(localStorage.localSend) {\n\t\tsetTimeout(() => {\n\t\t\tplayKey({key, channel_id: thisUser.channel_id, velocity}) // user delay?\n\t\t}, delay+pingTime)\n\t}\n\n\n}\n\nconst channels = {}\n\n// function loadPlayer(channel_id, preset) {\n// \tconsole.log(\"loading player\", channel_id, preset)\n// \tconst name = '_tone_' + preset\n// \tconst url = 'https://surikov.github.io/webaudiofontdata/sound/' + preset + '.js'\n\n\t\n\n// \tconst ch = channels[channel_id] = {}\n\n// \tch.player =new WebAudioFontPlayer()\n// \tch.preset = preset\t\n// \tch.keyNodes = {}\n\n\n// \tch.player.loader.startLoad(ac, url, name)\n// \tch.player.loader.waitLoad(function () {\n// \t\tstarted = true\n// \t\tch.instr = window[name]\n\n// \t\tconsole.log(\"loaded player\", channel_id, preset)\n// \t})\n// }\n\nlet midiInput\n// START MIDI\n{\n\tWebMidi.enable(function (err) {\n    \tconsole.log(WebMidi.inputs);\n\t\tconsole.log(WebMidi.outputs);\n\t\t\n\t\tmidiInput = WebMidi.inputs[0]\n\n\t\tif(midiInput) {\n\t\t\tmidiInput.addListener('noteon', \"all\", (e) => {\n\t\t\t\tconst key = e.note.name + e.note.octave\n\t\t\t\tuserPlayKey({key, velocity: e.velocity})\n\t\t\t})\n\n\t\t\tmidiInput.addListener('noteoff', \"all\", (e) => {\n\t\t\t\tconst key = e.note.name + e.note.octave\n\t\t\t\tuserStopKey({key})\n\t\t\t})\n\t\t}\n\n\t})\n}\n\n\nfunction enter() {\n\t\n\t\n\tif(!nick) {\n\t\treturn\n\t}\n\n\tdocument.querySelector('tone-keyboard').style.display = 'block'\n\n\n\tsocket.emit('enter',  (_users) => {\n\t\tusers = _users\n\n\t\tusers.forEach(u => addNewUser(u))\n\t\t\t\n\t\tsocket.emit('join', {nick: thisUser.nick})\n\t})\n\n\tthisUser = { ...thisUser, nick} \n\tlocalStorage.nick = nick\n}\n\n\nlet users = []\n\n\nfunction Piano() {\n\tvar piano = new Tone.Sampler({\n\t\t\"A0\" : \"A0.[mp3|ogg]\",\n\t\t\"C1\" : \"C1.[mp3|ogg]\",\n\t\t\"D#1\" : \"Ds1.[mp3|ogg]\",\n\t\t\"F#1\" : \"Fs1.[mp3|ogg]\",\n\t\t\"A1\" : \"A1.[mp3|ogg]\",\n\t\t\"C2\" : \"C2.[mp3|ogg]\",\n\t\t\"D#2\" : \"Ds2.[mp3|ogg]\",\n\t\t\"F#2\" : \"Fs2.[mp3|ogg]\",\n\t\t\"A2\" : \"A2.[mp3|ogg]\",\n\t\t\"C3\" : \"C3.[mp3|ogg]\",\n\t\t\"D#3\" : \"Ds3.[mp3|ogg]\",\n\t\t\"F#3\" : \"Fs3.[mp3|ogg]\",\n\t\t\"A3\" : \"A3.[mp3|ogg]\",\n\t\t\"C4\" : \"C4.[mp3|ogg]\",\n\t\t\"D#4\" : \"Ds4.[mp3|ogg]\",\n\t\t\"F#4\" : \"Fs4.[mp3|ogg]\",\n\t\t\"A4\" : \"A4.[mp3|ogg]\",\n\t\t\"C5\" : \"C5.[mp3|ogg]\",\n\t\t\"D#5\" : \"Ds5.[mp3|ogg]\",\n\t\t\"F#5\" : \"Fs5.[mp3|ogg]\",\n\t\t\"A5\" : \"A5.[mp3|ogg]\",\n\t\t\"C6\" : \"C6.[mp3|ogg]\",\n\t\t\"D#6\" : \"Ds6.[mp3|ogg]\",\n\t\t\"F#6\" : \"Fs6.[mp3|ogg]\",\n\t\t\"A6\" : \"A6.[mp3|ogg]\",\n\t\t\"C7\" : \"C7.[mp3|ogg]\",\n\t\t\"D#7\" : \"Ds7.[mp3|ogg]\",\n\t\t\"F#7\" : \"Fs7.[mp3|ogg]\",\n\t\t\"A7\" : \"A7.[mp3|ogg]\",\n\t\t\"C8\" : \"C8.[mp3|ogg]\"\n\t}, {\n\t\t\"release\" : 1,\n\t\t\"baseUrl\" : \"./audio/salamander/\"\n\t})\n\t// .toMaster();\n\n\treturn piano\n}\n\n\nvar reverb = new Tone.Reverb({wet: 0.2, decay: 7}).toMaster();\nreverb.generate().then(() => {\n\tconsole.log(\"Reverb is ready\")\n});\n\nfunction addNewUser(user) {\n\tusers = users.filter(u => u != user)\n\tusers = [...users, user]\n\n\tconsole.log(\"addingUser\", user)\n\t\n\t// const synth = new Tone.AMSynth().toMaster()\n\n\tconst instrument = Piano()\n\n\tinstrument.connect(reverb)\n\t\n\tchannels[user.channel_id] = instrument\n\n\tif(user.nick == thisUser.nick) {\n\t\tthisUser.channel_id = user.channel_id\n\t}\n}\n\nsocket.on('join', (user) => {\n\taddNewUser(user)\n})\n\n\n\n</script>\n<div class='wrapper' on:keyup|stopPropagation on:keydown|stopPropagation>\n\t{#if !thisUser.nick}\n\t\t<input bind:value={nick} placeholder=\"nick\" />\n\t\t<button on:click={enter}>ENTER</button>\n\t{:else}\n\t\t<Chat socket={socket}/>\n\t{/if}\n\n\n\t\n\n\t<PingTime socket={socket} onchange={(s) => pingTime =s} />\n</div>\n\n<style>\n.wrapper { \n\tz-index: 100;\n\tposition: fixed;\n}\n</style>",
    "<script>\n\nexport let socket\n\nlet chats = []\n\nlet input\n\nfunction submit(e) {\n    socket.emit('chat', {text: input.value})\n    input.value = ''\n}\n\nsocket.on('chat', (chat) => {\n    \n    while(chats.length > 20)\n        chats.shift()\n\n    chats = [...chats, chat]\n})\n\n</script>\n\n<ul id=\"messages\">\n    {#each chats as chat}\n        <li>{chat.text}</li>\n    {/each}\n</ul>\n\n<form action=\"\" on:submit|preventDefault={submit}>\n    <input bind:this={input} id=\"m\" autocomplete=\"off\" /><button>Send</button>\n</form>\n\n\n<style>\n    * { margin: 0; padding: 0; box-sizing: border-box; }\n    body { font: 13px Helvetica, Arial; }\n    form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }\n    form input { border: 0; padding: 10px; width: 90%; margin-right: 0.5%; }\n    form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }\n    #messages { list-style-type: none; margin: 0; padding: 0; }\n    #messages li { padding: 5px 10px; }\n    #messages li:nth-child(odd) { background: #eee; }\n</style>",
    "<script>\nimport {onMount} from 'svelte'\n\nlet smoothedPingTime = 30\nexport let socket\nexport let onchange = () => { }\n\nonMount(() => {\n    const timer = setInterval(() => {\n        \n        if(socket.connected) {\n\n            socket.emit('_ping', Date.now(), (date) => {\t\n                const pingTime = Date.now() - date\n                smoothedPingTime = (smoothedPingTime)*0.7 + pingTime*0.3\n                onchange(smoothedPingTime)\n            })\n        }\n\n    }, 200);\n\n    return () => {\n        clearInterval(timer)\n    }\n})\n\n\n</script>\n\n<div>Latency: {Math.floor(smoothedPingTime)}ms</div>\n\n<style>\ndiv {\n    background:black;\n    color: white;\n    display: block;\n    top: 0;\n    right: 0;\n    position: fixed;\n\n}\n</style>"
  ],
  "names": [],
  "mappings": "AAmRA,QAAQ,eAAC,CAAC,AACT,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,KAAK,AAChB,CAAC;ACnPG,4BAAE,CAAC,AAAC,MAAM,CAAE,CAAC,CAAE,OAAO,CAAE,CAAC,CAAE,UAAU,CAAE,UAAU,AAAE,CAAC,AAEpD,IAAI,4BAAC,CAAC,AAAC,UAAU,CAAE,IAAI,CAAE,OAAO,CAAE,GAAG,CAAE,QAAQ,CAAE,KAAK,CAAE,MAAM,CAAE,CAAC,CAAE,KAAK,CAAE,IAAI,AAAE,CAAC,AACjF,kBAAI,CAAC,KAAK,cAAC,CAAC,AAAC,MAAM,CAAE,CAAC,CAAE,OAAO,CAAE,IAAI,CAAE,KAAK,CAAE,GAAG,CAAE,YAAY,CAAE,IAAI,AAAE,CAAC,AACxE,kBAAI,CAAC,MAAM,cAAC,CAAC,AAAC,KAAK,CAAE,EAAE,CAAE,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE,MAAM,CAAE,IAAI,CAAE,OAAO,CAAE,IAAI,AAAE,CAAC,AACvF,SAAS,4BAAC,CAAC,AAAC,eAAe,CAAE,IAAI,CAAE,MAAM,CAAE,CAAC,CAAE,OAAO,CAAE,CAAC,AAAE,CAAC,AAC3D,uBAAS,CAAC,EAAE,cAAC,CAAC,AAAC,OAAO,CAAE,GAAG,CAAC,IAAI,AAAE,CAAC,AACnC,uBAAS,CAAC,gBAAE,WAAW,GAAG,CAAC,AAAC,CAAC,AAAC,UAAU,CAAE,IAAI,AAAE,CAAC;ACVrD,GAAG,cAAC,CAAC,AACD,WAAW,KAAK,CAChB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,KAAK,CACd,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,QAAQ,CAAE,KAAK,AAEnB,CAAC"
}